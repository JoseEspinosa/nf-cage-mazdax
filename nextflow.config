/*
 * -------------------------------------------------
 *  nf-core/nfcage Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 */

// Container slug. Stable releases should specify release tag!
// Developmental code should specify :dev
process.container = 'mazdax/nf-cage:latest'


profiles {
  conda { process.conda = "$projectDir/environment.yml" }
  debug { process.beforeScript = 'echo $HOSTNAME' }
  docker {
    docker.enabled = true
    // Avoid this error:
    //   WARNING: Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
    // Testing this in nf-core after discussion here https://github.com/nf-core/tools/pull/351
    // once this is established and works well, nextflow might implement this behavior as new default.
    docker.runOptions = '-u \$(id -u):\$(id -g) --rm'
    fixOwnership = true
    temp = 'auto'
  }
  singularity {
    singularity.enabled = true
    singularity.autoMounts = true
  }
  podman {
    podman.enabled = true
  }
}


// Export these variables to prevent local Python/R libraries from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
  R_PROFILE_USER = "/.Rprofile"
  R_ENVIRON_USER = "/.Renviron"
  TMPDIR = "$projectDir/tmp"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

manifest {
  name = 'nf-cage/dev'
  author = 'Dr Mazdak Salavati'
  homePage = 'https://github.com/MazdaX/nf-cage.git'
  description = 'nf-cage analysis pipline for CAGE-Seq'
  mainScript = 'main.nf'
  nextflowVersion = '>=20.10.0'
  version = '0.0.1'
}



report {
    enabled = true
    overwrite = true
    file = "${->params.pipeline_report_dir}/report.html"
}

timeline {
    enabled = true
    overwrite = true
    file = "${->params.pipeline_report_dir}/timeline.html"
}


trace {
    enabled = true
    overwrite = true
    file = "${->params.pipeline_report_dir}/trace.txt"
}



// best to keep process parameters in a params.json file (or YAML) not in the config.
params {
    
    //logging
    all_in_one      = 'AIO CAGEfightR import ready'
    
  
}

includeConfig 'configs/conf/base.config'